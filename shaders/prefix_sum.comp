#version 450 core

layout(local_size_x = 1024) in;
layout(binding = 0) buffer block1 {
    float input_data[gl_WorkGroupSize.x];
};
layout(binding = 1) buffer block2 {
    float output_data[gl_WorkGroupSize.x];
};
shared float shared_data[gl_WorkGroupSize.x * 2];
void main() {
    uint id = gl_LocalInvocationID.x;
    uint depth = uint(log2(gl_WorkGroupSize.x));

    for (int i = 0; i < depth; ++i) {
        uint xId = id % (1 << i + 1);
        if (xId < (1 << i) || ((id >> i) << i) < 1) shared_data[id] = input_data[id];
        else shared_data[id] = input_data[((id >> i) << i) - 1] + input_data[id];
        barrier();
        memoryBarrierShared();
        input_data[id] = shared_data[id];
    }
    output_data[id] = shared_data[id];
}